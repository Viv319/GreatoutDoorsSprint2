{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/growth-service.service.ts","webpack:///./src/app/growthtable/growthtable.component.css","webpack:///./src/app/growthtable/growthtable.component.html","webpack:///./src/app/growthtable/growthtable.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n  \\n\\n  <!--The content below is only a placeholder and can be replaced.-->\\n \\n  <div  style=\\\"text-align:center\\\" >\\n    <div style=\\\"background-color: mediumspringgreen;\\\">\\n    <h1  style=\\\"text-align: center\\\" style=\\\"font-style: oblique;\\\">\\n      \\n      Welcome to {{ title }}!\\n      <img src =\\\"assets/img/great.PNG\\\" height=\\\"100\\\" width=\\\"300\\\" align=\\\"left\\\" style=\\\"background-color: mediumseagreen;\\\">\\n    </h1>  \\n    \\n  <div class=\\\"container\\\"  style=\\\"background-color: mediumspringgreen;\\\">\\n    <div class=\\\"row\\\" >\\n      \\n  \\n      \\n    \\n      <div class=\\\"col-sm\\\">\\n        <button  style=\\\"float: right;\\\"  style=\\\"font-family: cursive;\\\"       routerLink=\\\"/growthReportTable\\\">Growth Table</button>\\n      </div>\\n    </div>\\n      \\n    </div>\\n  </div>\\n  \\n  <div class=\\\"jumbotron text-center\\\" >\\n    <router-outlet></router-outlet>\\n  </div>\\n  </div>\\n  \\n  \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GreatOutdoors';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { GrowthtableComponent } from './growthtable/growthtable.component';\n\nconst appRoutes:Routes=[\n  \n  {path:'growthReportTable',component:GrowthtableComponent},\n  \n\n  {path:'**',redirectTo:'',pathMatch:'full'}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n     \n     GrowthtableComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Growth } from './growth';\nimport {HttpClient, HttpClientModule} from '@angular/common/http'\nimport {Observable} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrowthServiceService {\n  growth:Growth[]=[];\n\n  constructor(private http:HttpClient) { }\n\n  loaddate():Observable<any>\n  {\n    let url = \"http://localhost:1114/growthReportTable\";\n\n    return this.http.get(url);\n  }\n\n  \n\n}\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"col-sm\\\">\\n  <button  style=\\\"float: right;\\\"  style=\\\"font-family: cursive;\\\"       routerLink=\\\"/growthReportTable/{id}\\\">Find user by id</button>\\n</div>\\n\\n<div class=\\\"col-sm\\\">\\n  <button  style=\\\"float: right;\\\"  style=\\\"font-family: cursive;\\\"       routerLink=\\\"/growthReportTable\\\">click here to get growth report table table</button>\\n</div> -->\\n\\n<table  border=\\\"2px\\\" align=\\\"center\\\" style=\\\"color: black;\\\">\\n  <thead>\\n    <th>userId</th>\\n    <th> period</th>\\n    <th>revenue</th>\\n    <th>amountChange</th>\\n    <th>percentageGrowth</th>\\n    <th>colrCode</th>\\n\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let add of growth\\\">\\n      <td style=\\\"background-color:rgb(144, 144, 224)\\\">{{add.userId}}</td>\\n      <td style=\\\"background-color:greenyellow\\\">{{add.period}}</td>\\n      <td style=\\\"background-color:rgb(137, 204, 141)\\\">{{add.revenue}}</td>\\n      <td style=\\\"background-color:rgb(80, 204, 55)\\\">{{add.amountChange}}</td>\\n      <td style=\\\"background-color:rgb(187, 163, 180)\\\">{{add.percentageGrowth}}</td>\\n      <!-- <td>{{add.colrCode}} </td>  -->\\n      \\n      <td  style=\\\"background-color:red\\\">{{add.colrCode}}</td>\\n      \\n      \\n    </tr>\\n    \\n    \\n  </tbody>\\n\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {GrowthServiceService} from '../growth-service.service';\nimport { Growth } from '../growth';\n\n@Component({\n  selector: 'app-growthtable',\n  templateUrl: './growthtable.component.html',\n  styleUrls: ['./growthtable.component.css']\n})\nexport class GrowthtableComponent implements OnInit {\n\n  constructor(private growthservice:GrowthServiceService) { }\n  growth:Growth[]=[];\n\n\n  ngOnInit(): void {\n    this.growthservice.loaddate().subscribe(data=>\n      {this.growth=data;\n    },\n    error=>\n    {\n      console.log(\"error occured in growth table\",error);\n    }\n      );\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}